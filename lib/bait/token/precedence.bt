// SPDX-FileCopyrightText: 2023-present Lukas Neubert <lukas.neubert@proton.me>
// SPDX-License-Identifier: MPL-2.0
package token

pub enum Precedence {
	lowest
	cond
	compare
	as_is
	sum
	product
	prefix
	call
	index
}

pub fun (t Token) precedence() Precedence {
	match t.kind {
		.lbr {
			return .index
		}
		.dot {
			return .call
		}
		.key_not, .caret {
			return .prefix
		}
		.mul, .div, .mod {
			return .product
		}
		.plus, .minus {
			return .sum
		}
		.eq, .ne, .lt, .gt, .le, .ge {
			return .compare
		}
		.key_as, .key_is {
			return .as_is
		}
		.key_and, .key_or {
			return .cond
		}
		else {
			return .lowest
		}
	}
}
